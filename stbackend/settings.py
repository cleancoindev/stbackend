"""
Django settings for stbackend project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

# To Deploy: gcloud app deploy ~/Documents/GitHub/stbackend/app.yaml --project=showtimenft
# Production URL: https://showtimenft.wl.r.appspot.com/api/

from pathlib import Path
import os

# Heads up: Even with credentials, your IP address will have to be whitelisted
# before you can access the production database
USE_PRODUCTION_DB_LOCALLY = False

# Import secrets
if not os.getenv('GAE_APPLICATION', None):
    # Running locally

    if not USE_PRODUCTION_DB_LOCALLY:
        # Save you some setup - using throwaway secret_key
        SECRET_KEY = "0s3U695E3QzQ79OLttfUQClr"
    else:
        # Using prod DB - need to import secrets from stbackend/.env file
        # See stbackend/.env.example for how to set up your .env
        import environ
        env = environ.Env()
        environ.Env.read_env()

        SECRET_KEY = env('SECRET_KEY')
        DB_HOST = env('DB_HOST')
        DB_NAME = env('DB_NAME')
        DB_USER = env('DB_USER')
        DB_PASSWORD = env('DB_PASSWORD')
else:
    # Running in App Engine
    # Get secrets from secret manager in Google App Engine
    from google.cloud import secretmanager

    def access_secret_version(secret_id, version_id="latest"):
        '''Get the latest values from the secret manager'''

        # Create the Secret Manager client.
        client = secretmanager.SecretManagerServiceClient()

        # Build the resource name of the secret version.
        name = f"projects/showtimenft/secrets/{secret_id}/versions/{version_id}"

        # Access the secret version.
        response = client.access_secret_version(name=name)

        # Return the decoded payload.
        return response.payload.data.decode('UTF-8')

    SECRET_KEY = access_secret_version("SECRET_KEY")
    DB_HOST = access_secret_version('DB_HOST')
    DB_NAME = access_secret_version('DB_NAME')
    DB_USER = access_secret_version('DB_USER')
    DB_PASSWORD = access_secret_version('DB_PASSWORD')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/



ALLOWED_HOSTS = ['localhost','127.0.0.1', 'showtimenft.wl.r.appspot.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'api'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stbackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stbackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases


if os.getenv('GAE_APPLICATION', None):
    DEBUG = False
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': DB_HOST,
            'NAME': DB_NAME,
            'USER': DB_USER,
            'PASSWORD': DB_PASSWORD,
            'OPTIONS': {'charset': 'utf8mb4'},
        }
    }
else:
    DEBUG = True
    if USE_PRODUCTION_DB_LOCALLY:

        # Your IP address will have to be whitelisted before you can access the production database
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.mysql',
                'HOST': DB_HOST,
                'PORT': '3306',
                'NAME': DB_NAME,
                'USER': DB_USER,
                'PASSWORD': DB_PASSWORD,
                'OPTIONS': {'charset': 'utf8mb4'},
            }
        }
    else:
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': BASE_DIR / 'db.sqlite3',
            }
        }



# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static'
